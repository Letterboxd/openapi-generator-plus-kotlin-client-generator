{{>frag/schemaDocumentation}}
{{#if deprecated}}
@kotlin.Deprecated(message = "This class is deprecated.")
{{/if}}
{{#join '_parents' ', '}}
{{#each parents}}
{{{nativeType.parentType}}}
{{/each}}
{{#each implements}}
{{{nativeType.parentType}}}
{{/each}}
{{/join}}
@kotlinx.serialization.Serializable
data class {{{name}}} (
    
{{#each properties}}
    {{>frag/propertyDocumentation}}
    {{#if deprecated}}
    @kotlin.Deprecated(message = "This property is deprecated.")
    {{/if}}
    @kotlinx.serialization.SerialName(value = "{{{serializedName}}}")
    {{#ifeq schema.nativeType.concreteType 'java.net.URL'}}
    @kotlinx.serialization.Serializable(with = {{{../supportPackage}}}.KURLSerializer::class)
    {{/ifeq}}
    {{#ifeq schema.nativeType.concreteType 'java.util.UUID'}}
    @kotlinx.serialization.Serializable(with = {{{../supportPackage}}}.KUUIDSerializer::class)
    {{/ifeq}}
    {{#if nullable}}
    {{#ifeq schema.schemaType "ENUM"}}
    @kotlinx.serialization.Serializable(with = {{{nativeType.concreteType}}}.NullableSerializer::class)
    {{else}}
    @kotlinx.serialization.Serializable(with = {{{../supportPackage}}}.Nullable.Serializer::class)
    {{/ifeq}}
    {{else}}
    {{#ifeq schema.schemaType "ENUM"}}
    @kotlinx.serialization.Serializable(with = {{{nativeType.concreteType}}}.Serializer::class)
    {{/ifeq}}
    {{/if}}
    {{#if overrides}}override {{/if}}val {{{name}}}: {{{nativeType}}}{{#unless required}} = {{#if initialValue}}{{{initialValue.literalValue}}}{{else}}{{{undefinedValueLiteral schema}}}{{/if}}{{/unless}},

{{/each}}
){{#if _parents}}: {{{_parents}}}{{/if}}{{#if schemas}} {

    {{>frag/nestedSchemas}}
}{{/if}}
